#include <iostream>
using namespace std;
class Node{
    public:
    int data;
    Node* next;

    Node(int data){
        this->data=data;
        this->next=NULL;
    }
   
};  
void InsertAtHead(Node* &head,int d){
    Node* temp=new Node(d);
    temp->next=head;
    head=temp;
}

void InsertPosition(Node* &head, int position,int d){
    Node* temp=head;
    if(position == 1){
        InsertAtHead(head,d);
    }
    int cnt=1;
    while(cnt < position-1){
        temp=temp->next;
        cnt++;
    }
    
     Node* ponode=new Node(d);
     ponode->next=temp->next;
     temp->next=ponode;
}
void InsertAtTail(Node* &tail ,int d){
    Node* temp=new Node(d);
    tail->next=temp;
    tail=temp;
    
}
void deleteNode(Node* &head,int position){
    if(position==1){
        Node* temp=head;
        head=head->next;
        temp->next=NULL;
        delete temp;
    }
    int cnt=1;
    Node* curr=head;
    Node* prev=NULL;
    while(cnt<position){
        prev=curr;
        curr=curr->next;
        cnt++;
    }
    prev->next=curr->next;
    curr->next=NULL;
    delete curr;
}
void print(Node* &head){
    Node* temp=head;
    while(temp !=NULL){
        cout << temp->data << " " ;
        temp=temp->next;
    }
    cout << endl;
}

int main() {
        Node* node1=new Node(12);
        Node* head=node1;
        Node* tail=node1; 
        print(head);
        InsertAtHead(head,13);
        InsertAtTail(tail,31);
        print(head);
         InsertAtHead(head,16);
        print(head);
        InsertPosition(head,1,99);
        print(head);
 InsertPosition(head,4,66);
        print(head);
        
    return 0;
}
